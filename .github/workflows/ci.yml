name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - elixir: 1.12.3
            otp: 24.0
            env: test
          - elixir: 1.12.3
            otp: 24.0
            env: test_mysql
          - elixir: 1.12.3
            otp: 23.3
            env: test
          - elixir: 1.12.3
            otp: 23.3
            env: test_mysql
          - elixir: 1.12.3
            otp: 22.3
            env: test
          - elixir: 1.12.3
            otp: 22.3
            env: test_mysql
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ex_double_entry_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: ex_double_entry_test
          MYSQL_USER: root
          MYSQL_PASSWORD:
          MYSQL_ROOT_PASSWORD:
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Run tests
      env:
        MIX_ENV: ${{ matrix.env }}
      run: mix test
